<?xml version="1.0" encoding="UTF-8"?>
<mule:mule xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mule="http://www.mulesource.org/schema/mule/core/2.0"
	xmlns:jms="http://www.mulesource.org/schema/mule/jms/2.0"
	xmlns:bean="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
               http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
               http://www.mulesource.org/schema/mule/core/2.0 http://www.mulesource.org/schema/mule/core/2.0/mule.xsd
               http://www.mulesource.org/schema/mule/jms/2.0 http://www.mulesource.org/schema/mule/jms/2.0/mule-jms.xsd">
	

	<!--  the JMS configuration, tell mule where we want to connect to for JMS -->
	<beans>
		<import resource="components.xml"/>
	
		<bean name="activeMQConnectionFactory"
			class="org.apache.activemq.ActiveMQConnectionFactory">
			<property name="brokerURL" value="tcp://localhost:61616" />
		</bean>
	</beans>

	<jms:activemq-connector name="example">
		<property name="connectionFactory"
			ref="activeMQConnectionFactory" />
	</jms:activemq-connector>


	<!--  the transformers used in this example -->
	<mule:custom-transformer class="esb.chapter3.ObjectToXMLTransformer"
		name="ObjectToXML" />
	<mule:custom-transformer class="esb.chapter3.XMLToObjectTransformer"
		name="XMLPersonToObject">
		<property name="targetClassName" value="esb.chapter3.Person" />
	</mule:custom-transformer>

	<mule:byte-array-to-string-transformer name="ObjectToString" />

	<!--
		The Mule model initialises and manages your UMO components
	-->
	<mule:model name="muleExample">

		<mule:service name="comp1service">
			<mule:inbound>
				<mule:inbound-endpoint address="file://work/in" />
			</mule:inbound>
			<mule:component>
				<mule:spring-object bean="component1" />
			</mule:component>
			<mule:outbound>
				<mule:outbound-pass-through-router>
					<mule:outbound-endpoint address="vm://comp2Queue" />
				</mule:outbound-pass-through-router>
			</mule:outbound>
		</mule:service>
		<!--
			This component receives messages from a directory and 
			publishes the messages it receives on a JMS Queue.
		-->
		<mule:service name="JMSBridge">
			<mule:inbound>
				<mule:inbound-endpoint
					address="file://work-mule/chapter3/inbox"
					transformer-refs="ObjectToString XMLPersonToObject" />
			</mule:inbound>
			<mule:bridge-component />
			<mule:outbound>
				<mule:outbound-pass-through-router>
					<mule:outbound-endpoint address="jms://log.queue" />
				</mule:outbound-pass-through-router>
			</mule:outbound>
		</mule:service>

		<!-- 
			This component receives the messages from the queue, logs them and sends them
			to a topic.
		-->
		<mule:service name="Logger">
			<mule:inbound>
				<mule:inbound-endpoint address="jms://log.queue" />
			</mule:inbound>
			<mule:bridge-component />
			<mule:outbound>
				<mule:outbound-pass-through-router>
					<mule:outbound-endpoint
						address="jms://topic:listener" />
				</mule:outbound-pass-through-router>
			</mule:outbound>
		</mule:service>

		<!-- 
			This is the first component that listens to a topic
		-->
		<mule:service name="topicListener1">
			<mule:inbound>
				<mule:inbound-endpoint address="jms://topic:listener" />
			</mule:inbound>
			<mule:bridge-component />
			<mule:outbound>
				<mule:outbound-pass-through-router>
					<mule:outbound-endpoint
						address="file://work-mule/chapter3/outbox-1"
						transformer-refs="ObjectToXML" />
				</mule:outbound-pass-through-router>
			</mule:outbound>
		</mule:service>

		<!--  and the second component that listens to the topic -->
		<mule:service name="topicListener2">
			<mule:inbound>
				<mule:inbound-endpoint address="jms://topic:listener" />
			</mule:inbound>
			<mule:bridge-component />
			<mule:outbound>
				<mule:outbound-pass-through-router>
					<mule:outbound-endpoint
						address="file://work-mule/chapter3/outbox-2" />
				</mule:outbound-pass-through-router>
			</mule:outbound>
		</mule:service>

	</mule:model>

</mule:mule>
