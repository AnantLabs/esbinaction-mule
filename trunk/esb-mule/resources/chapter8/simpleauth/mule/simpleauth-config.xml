<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring="http://www.springframework.org/schema/beans"
       xmlns:stdio="http://www.mulesource.org/schema/mule/stdio/2.0"
       xmlns:acegi="http://www.mulesource.org/schema/mule/acegi/2.0"
       xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.0"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.mulesource.org/schema/mule/core/2.0 http://www.mulesource.org/schema/mule/core/2.0/mule.xsd
       http://www.mulesource.org/schema/mule/stdio/2.0 http://www.mulesource.org/schema/mule/stdio/2.0/mule-stdio.xsd
       http://www.mulesource.org/schema/mule/acegi/2.0 http://www.mulesource.org/schema/mule/acegi/2.0/mule-acegi.xsd
       http://www.mulesource.org/schema/mule/vm/2.0 http://www.mulesource.org/schema/mule/vm/2.0/mule-vm.xsd">
	
	<vm:connector name="exceptionVM">
		<default-connector-exception-strategy>
			<outbound-endpoint address="vm://security.error"/>
		</default-connector-exception-strategy>
	</vm:connector>
	
	<acegi:security-manager>
    	<acegi:delegate-security-provider name="AcegiProvider" delegate-ref="daoAuthenticationProvider"/>
    </acegi:security-manager>
    
    <spring:bean id="daoAuthenticationProvider" class="org.acegisecurity.providers.dao.DaoAuthenticationProvider">
        <spring:property name="userDetailsService" ref="inMemoryDaoImpl"/>
	</spring:bean>

    <spring:bean id="inMemoryDaoImpl" class="org.acegisecurity.userdetails.memory.InMemoryDaoImpl">
        <spring:property name="userMap">
        	<spring:value>
        		admin=admin,ROLE_ADMIN
                johndoe=john,ROLE_USER
        	</spring:value>
        </spring:property>
	</spring:bean>
	
	<spring:bean id="keyEncryption" class="org.mule.extras.pgp.KeyBasedEncryptionStrategy"/>
	
	<custom-transformer name="SimpleAuthTransformer" class="esb.chapter8.security.transformer.SimpleAuthenticationTransformer"/>

	<model name="SimpleAuthExample">
		
		<service name="UserInputService">
			<inbound-router>
                <inbound-endpoint address="stdio://System.in?promptMessage=Credentials:"/>
            </inbound-router>
            <outbound-router>
            	<outbound-pass-through-router>
            		<outbound-endpoint address="vm://security.in" transformer-refs="SimpleAuthTransformer"/>
            	</outbound-pass-through-router>
            </outbound-router>
		</service>
	
        <service name="SimpleAuthService">
            <inbound-router>
                <inbound-endpoint address="vm://security.in" connector-ref="exceptionVM">
                	<encryption-security-filter strategy-ref="keyEncryption"/>
                </inbound-endpoint>
            </inbound-router>
            <component>
            	<pooled-object class="esb.chapter8.security.service.AuthenticationService">
            		<properties>
            			<spring:entry key="authenticated" value="true"/>
            		</properties>
            	</pooled-object>
            </component>
            <outbound-router>
            	<outbound-pass-through-router>
            		<outbound-endpoint address="stdio://System.out"/>
            	</outbound-pass-through-router>
			</outbound-router>
		</service>
		
		<service name="AuthFailedService">
			<inbound-router>
                <inbound-endpoint address="vm://security.error"/>
            </inbound-router>
            <component>
            	<pooled-object class="esb.chapter8.security.service.AuthenticationService">
            		<properties>
            			<spring:entry key="authenticated" value="false"/>
            		</properties>
            	</pooled-object>
            </component>
            <outbound-router>
            	<outbound-pass-through-router>
            		<outbound-endpoint address="stdio://System.out"/>
            	</outbound-pass-through-router>
            </outbound-router>
		</service>
	</model>
</mule>

