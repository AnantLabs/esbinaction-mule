<?xml version="1.0"?>
<!--
This build file provides all the targets needed to run the examples from
the second chapter. This file makes heavily use of the ant tasks provided
by servicemix.

This build file assumes that the SM_HOME and the OS_ESB properties are set
to respectively the servicemix installation and the 'opensource ESB' provided
files. 
-->
<project name="chapter 7 - Mule" basedir="../.." default="init" xmlns:sm="urn:servicemix">

	<!-- read in the system's environment -->
	<property environment="env" />

	<!-- We can't continue without these properties -->
<!--	<fail unless="env.MULE_HOME" message="MULE_HOME property not set, can't continue." /> -->
	<fail unless="env.OS_ESB" message="OS_ESB property not set, can't continue." />

	<property name="script" value="../../scripts/ant"/>

	<!-- import the servicemix tasks into the sm namespace -->
	<import file="${script}/mule-general-ant.xml" />
	<import file="${script}/osesb-general-ant.xml" />
		
	<property name="chapter.home" location="${workspace.home}/mule/resources/chapter7" />

	<target name="init">
		<antcall target="gn:init" />
		<echo message="Mule home is set to ${MULE_HOME}." />
		<echo message="Opensource ESB is set to ${OS_ESB}." />
		<echo message="Chapter home is set to ${chapter.home}." />
		<echo message="Workspace home is set to ${workspace.home}." />
	</target>
	
	<target name="chapter7-top-down-provide" depends="gn:init" description="Chapter 6 - File example 1">	
		<antcall target="gn:run-mule-with-xmlconfig">
			<param name="file" value="${chapter.home}/provide-wsdl-top-down/wsdl-first.xml"/>
		</antcall>
	</target>
	
	<target name="chapter7-bottom-up-provide" depends="gn:init" description="Chapter 6 - File example 2">	
		<antcall target="gn:run-mule-with-xmlconfig">
			<param name="file" value="${chapter.home}/provide-wsdl-bottom-up/wsdl-bottom-up.xml"/>
		</antcall>
	</target>
	
	<target name="chapter7-consume-ws" depends="gn:init" description="Chapter 6 - File example 2">	
		<antcall target="gn:run-mule-with-xmlconfig">
			<param name="file" value="${chapter.home}/consume-wsdl/consume-wsdl.xml"/>
		</antcall>
	</target>
	
	<target name="chapter7-consume-ws-server" depends="gn:init" description="Chapter 6 - File example 2">
		<property name="xfire.home" location="${LIB}/xfire-1.2.6" />
		<java classname="esb.chapter7.CocServer" fork="true">
			<classpath>
				<fileset dir="${xfire.home}/modules">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${xfire.home}/lib">
					<include name="*.jar" />
				</fileset>
				<pathelement path="${workspace.home}/mule/classes"/>
			</classpath>
		</java>
	</target>	
	
	<target name="chapter7-wss-provide" depends="gn:init" description="Chapter 6 - File example 2">	
		<antcall target="gn:run-mule-with-xmlconfig">
			<param name="file" value="${chapter.home}/ws-security-incoming/provide-ws-security.xml"/>
		</antcall>
	</target>
	
	<target name="chapter7-wss-consume" depends="gn:init" description="Chapter 6 - File example 2">	
		<antcall target="gn:run-mule-with-xmlconfig">
			<param name="file" value="${chapter.home}/1b-file/file-example2.xml"/>
		</antcall>
	</target>
	
	<target name="chapter7-wsa-consume" depends="gn:init" description="Chapter 6 - File example 2">	
		<antcall target="gn:run-mule-with-xmlconfig">
			<param name="file" value="${chapter.home}/1b-file/file-example2.xml"/>
		</antcall>
	</target>	
	
	<target name="xfire-generate-server-stubs" depends="init" description="generate the server stubs">
			<!--<property name="cxfconnector.home" location="${LIB}/mule-transport-cxf-1.0-M2" /> -->
			<property name="xfire.home" location="${LIB}/xfire-1.2.6" />
			<path id="xfire.classpath">
				<!--
				<fileset dir="${cxfconnector.home}/lib">
					<include name="*.jar" />
				</fileset>
				-->
				<fileset dir="${xfire.home}/modules">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${xfire.home}/lib">
					<include name="*.jar" />
				</fileset>
			</path>

			<taskdef name="wsgen" classname="org.codehaus.xfire.gen.WsGenTask" classpathref="xfire.classpath" />
			<wsgen outputDirectory="${workspace.home}/src-generated" wsdl="${chapter.home}/provide-wsdl-top-down/CoC.wsdl" 
				overwrite="false" generateserverstubs="true" />
		</target>	
	
</project>
