<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring="http://www.springframework.org/schema/beans"
       xmlns:stdio="http://www.mulesource.org/schema/mule/stdio/2.0"
       xmlns:acegi="http://www.mulesource.org/schema/mule/acegi/2.0"
       xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.0"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.mulesource.org/schema/mule/core/2.0 http://www.mulesource.org/schema/mule/core/2.0/mule.xsd
       http://www.mulesource.org/schema/mule/stdio/2.0 http://www.mulesource.org/schema/mule/stdio/2.0/mule-stdio.xsd
       http://www.mulesource.org/schema/mule/acegi/2.0 http://www.mulesource.org/schema/mule/acegi/2.0/mule-acegi.xsd
       http://www.mulesource.org/schema/mule/vm/2.0 http://www.mulesource.org/schema/mule/vm/2.0/mule-vm.xsd">
	
	<vm:connector name="exceptionVM">
		<default-connector-exception-strategy>
			<outbound-endpoint address="vm://security.error"/>
		</default-connector-exception-strategy>
	</vm:connector>
	
    <stdio:connector name="inConnector" promptMessage="Credentials"/>
  
	<acegi:security-manager>
    	<acegi:delegate-security-provider name="AcegiProvider" delegate-ref="daoAuthenticationProvider"/>
    </acegi:security-manager>
    
    <spring:bean id="daoAuthenticationProvider" class="org.acegisecurity.providers.dao.DaoAuthenticationProvider">
        <spring:property name="userDetailsService" ref="inMemoryDaoImpl"/>
	</spring:bean>

    <spring:bean id="inMemoryDaoImpl" class="org.acegisecurity.userdetails.memory.InMemoryDaoImpl">
        <spring:property name="userMap">
        	<spring:value>
        		admin=admin,ROLE_ADMIN
                johndoe=john,ROLE_USER
        	</spring:value>
        </spring:property>
	</spring:bean>
	
	<spring:bean id="keyEncryption" class="org.mule.module.pgp.KeyBasedEncryptionStrategy"/>
	
	<custom-transformer name="SimpleAuthTransformer" class="esb.chapter8.security.authentication.transformer.SimpleAuthenticationTransformer"/>

	<model name="SimpleAuthExample">
		
		<service name="UserInputService">
			<inbound>
                <stdio:inbound-endpoint system="IN"/>
            </inbound>
            <outbound>
            	<outbound-pass-through-router>
            		<vm:outbound-endpoint path="security.in">
                      <transformer ref="SimpleAuthTransformer"/>
                    </vm:outbound-endpoint>
            	</outbound-pass-through-router>
            </outbound>
		</service>
	
        <service name="SimpleAuthService">
            <inbound>
                <vm:inbound-endpoint path="security.in" connector-ref="exceptionVM">
                	<encryption-security-filter strategy-ref="keyEncryption"/>
                </vm:inbound-endpoint>
            </inbound>
            <pooled-component>
              <singleton-object class="esb.chapter8.security.authentication.service.AuthenticationService"> 
                <properties>
                    <spring:entry key="authenticated" value="true"/>
                </properties>
              </singleton-object>
            </pooled-component>
            <outbound>
            	<outbound-pass-through-router>
            		<stdio:outbound-endpoint system="OUT"/>
            	</outbound-pass-through-router>
			</outbound>
		</service>
		
		<service name="AuthFailedService">
			<inbound>
                <vm:inbound-endpoint path="security.error"/>
            </inbound>
            <pooled-component>
              <singleton-object class="esb.chapter8.security.authentication.service.AuthenticationService"> 
                <properties>
                    <spring:entry key="authenticated" value="false"/>
                </properties>
              </singleton-object>
            </pooled-component>
            <outbound>
            	<outbound-pass-through-router>
            		<stdio:outbound-endpoint system="OUT"/>
            	</outbound-pass-through-router>
            </outbound>
		</service>
	</model>
</mule>

