<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring="http://www.springframework.org/schema/beans"
       xmlns:jms="http://www.mulesource.org/schema/mule/jms/2.0"
       xmlns:mgmt="http://www.mulesource.org/schema/mule/management/2.0"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.mulesource.org/schema/mule/core/2.0 http://www.mulesource.org/schema/mule/core/2.0/mule.xsd
       http://www.mulesource.org/schema/mule/management/2.0 http://www.mulesource.org/schema/mule/management/2.0/mule-management.xsd
       http://www.mulesource.org/schema/mule/jms/2.0 http://www.mulesource.org/schema/mule/jms/2.0/mule-jms.xsd">
	
    
	<spring:beans>
		<spring:import resource="../spring/restaurant-beans.xml"/>
        
	</spring:beans>
	
	<jms:connector name="jmsConnector">
		<jms:connection-factory class="org.apache.activemq.ActiveMQConnectionFactory">
			<properties>
				<spring:entry key="brokerURL" value="tcp://localhost:61616"/>
			</properties>
		</jms:connection-factory>
	</jms:connector>

     <!-- <mgmt:jmx-server name="jmxserver"/>  -->
     <mgmt:jmx-default-config name="default"/>
     
     
	
	<endpoint name="inquiry-topic" address="jms://topic:inquiries.in"/>
	<endpoint name="inquiry-out" address="jms://restaurant.response"/>
	
    <model name="RestaurantModel">

  
		<service name="LakeviewRestaurantService">
            <inbound-router>
            	<inbound-endpoint ref="inquiry-topic"/>
            </inbound-router>
            <component>
            	<singleton-object instance-ref="lakeviewRestaurant"/>
            </component>
	   		<outbound-router>
	   			<custom-outbound-router class="esb.chapter9.restaurant.router.ExpirationRouter">
	          		<outbound-endpoint ref="inquiry-out"/>
	          		<spring:property name="reservationDAO" ref="restaurantDAO"/>
	        	</custom-outbound-router>
	     	</outbound-router>                    	 
		</service>
		
		<service name="DuckRestaurantService">
            <inbound-router>
            	<inbound-endpoint ref="inquiry-topic"/>
            </inbound-router>
            <component>
            	<singleton-object instance-ref="duckRestaurant"/>
            </component>
	   		<outbound-router>
	        	<custom-outbound-router class="esb.chapter9.restaurant.router.ExpirationRouter">
	          		<outbound-endpoint ref="inquiry-out"/>
	          		<spring:property name="reservationDAO" ref="restaurantDAO"/>
	        	</custom-outbound-router>
	     	</outbound-router>                    	 
		</service>
		
		<service name="YokohamaRestaurantService">
            <inbound-router>
            	<inbound-endpoint ref="inquiry-topic"/>
            </inbound-router>
            <component>
            	<singleton-object instance-ref="yokohamaRestaurant"/>
            </component>
	   		<outbound-router>
	        	<custom-outbound-router class="esb.chapter9.restaurant.router.ExpirationRouter">
	          		<outbound-endpoint ref="inquiry-out"/>
	          		<spring:property name="reservationDAO" ref="restaurantDAO"/>
	        	</custom-outbound-router>
	     	</outbound-router>                    	 
		</service>
		
		<service name="ReservationResponseService">
			<inbound-router>
				<forwarding-catch-all-strategy>
					<outbound-endpoint address="jms://confirmation.error"/>
				</forwarding-catch-all-strategy>
				<inbound-endpoint address="jms://reservation.confirmation"/>
				<selective-consumer-router>
					<custom-filter class="esb.chapter9.restaurant.router.ExpirationCheckFilter">
						<spring:property name="reservationDAO" ref="restaurantDAO"/>
					</custom-filter>
				</selective-consumer-router>
			</inbound-router>
			<echo-component/>
			<outbound-router>
				<filtering-router>
					<outbound-endpoint address="jms://lakeview.confirmation"/>
					<wildcard-filter pattern="*Lakeview*"/>
				</filtering-router>
				<filtering-router>
					<outbound-endpoint address="jms://theroyalduck.confirmation"/>
					<wildcard-filter pattern="*duck*"/>
				</filtering-router>
				<filtering-router>
					<outbound-endpoint address="jms://yokohama.confirmation"/>
					<wildcard-filter pattern="*Yokohama*"/>
				</filtering-router>
			</outbound-router>
		</service>
	</model>
</mule>