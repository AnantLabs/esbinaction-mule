<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


  <!-- <jaxws:client name="{http://opensource.esb.org/CoC/}CocServiceImplPort" createdFromAPI="true"> -->

  <bean name="SAAJOutInterceptor"
    class="org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor" />
  <bean name="WSS4JOutInterceptor"
    class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
    <constructor-arg>
      <map>
        <!-- We're going to sign and encrypt the message -->
        <entry key="action" value="Signature Encrypt" />
        <!-- We need a password callback to retrieve the sign. key -->
        <entry key="passwordCallbackRef" value-ref="wsCallback" />
        <!-- The user specified here is the private key used for signing -->
        <entry key="user" value="clientkey" /> 
        <!-- The encryptionUser points to the alias/public key used for encryption -->
        <entry key="encryptionUser" value="serverkey" />
        <!-- The property file used for de/encryption -->
        <entry key="decryptionPropFile" value="esb/chapter7/client.crypto.properties" />
        <!--  The property file used for signing/validation -->
        <entry key="signaturePropFile" value="esb/chapter7/client.crypto.properties" />
      </map>
    </constructor-arg>
  </bean>

  <bean id="cxf" class="org.apache.cxf.bus.CXFBusImpl">
    <property name="outInterceptors">
      <list>
        <ref bean="SAAJOutInterceptor" />
        <ref bean="WSS4JOutInterceptor" />
      </list>
    </property>
  </bean>

  <bean id="wsCallback" class="esb.chapter7.TestPwdCallback" />
</beans>